#!/usr/bin/env bash
#set -vux
#
# nc-scp
# Â© Olivetti 2023-2024
#
# https://www.netcup-wiki.de/wiki/Netcup_SCP_Webservice
# https://www.servercontrolpanel.de/WSEndUser?wsdl
# https://www.servercontrolpanel.de/WSEndUser?xsd=1
#
# dependencies:	curl, xmlstarlet
# recommended:	pass
#
# todo:
# stats
# traffic # tod/tom

version="v0.3"

usage() { echo "${0##*/} ${version} usage:" && grep -E "[[:space:]].)[[:space:]]+#" $0 | sed -e 's/)|#//g' -e 's/^ +/ -/g'; exit; }
[[ ${#} -eq 0 ]] && usage

# Credentials in env
source "${0%/*}/env"
server="${server1}"

url="https://www.servercontrolpanel.de/WSEndUser"

get_ymd() {
	  now=$(date +'%Y-%m-%d')
	 date=${1:-$now}
	 year="${date:0:4}"
	month="${date:5:2}"
	  day="${date:8:2}"
}

getopts_get_optional_argument() {
	eval next_token=\${$OPTIND}
	if [[ -n ${next_token} && ${next_token} != -* ]]; then
		OPTIND=$((OPTIND + 1))
		OPTARG=${next_token}
	else
		OPTARG=""
	fi
}

while getopts ":h12ansiuz3456789bcdefgjkm:op" opt
 do
  case "${opt}" in
   1)	# server server1
	server="${server1}" ;;
   2)	# server server2
	server="${server2}" ;;
   a)	# get vservers
	tns="getVServers" ;;
   n)	# get vserver nickname
	tns="getVServerNickname" ;;
   s)	# get vserver state
	tns="getVServerState" ;;
   i)	# get vserver ips
	tns="getVServerIPs" ;;
   u)	# get vserver uptime
	tns="getVServerUptime" ;;
   z)	# get vserver update notification
	tns="getVServerUpdateNotification" ;;
   3)	# start vserver
	tns="startVServer" ;;
   4)	# stop vserver
	tns="stopVServer" ;;
   5)	# vserver start
	tns="vServerStart" ;;
   6)	# vserver poweroff
	tns="vServerPoweroff" ;;
   7)	# vserver acpi reboot
	tns="vServerACPIReboot" ;;
   8)	# vserver acpi shutdown
	tns="vServerACPIShutdown" ;;
   9)	# vserver suspend
	tns="vServerSuspend" ;;
   b)	# vserver resume
	tns="vServerResume" ;;
   c)	# vserver restore		# not active
	#tns="vServerRestore" ;;
	tns="" ;;			# not active
   d)	# vserver reset
	#tns="vServerReset" ;;
	tns="" ;;
   e)	# get vserver information	# nok (not on kvm)
	tns="getVServerInformation" ;;
   f)	# get vserver load		# nok
	tns="getVServerLoad" ;;
   g)	# get vserver processes		# nok
	tns="getVServerProcesses" ;;
   j)	# get vserver log entry count	# nok
	tns="getVServerLogEntryCount" ;;
   k)	# get vserver log entries	# nok
	tns="getVServerLogEntries" ;;
   m)	# manual input (eg. getVServerStatToken)
	tns=${OPTARG} ;;
   o)	# get vserver traffic of day   (isodate 2024-01-01)
	tns="getVServerTrafficOfDay"
	getopts_get_optional_argument ${@}
	get_ymd ${OPTARG}
	echo -e "Date:\t${date}" ;;
   p)	# get vserver traffic of month (isodate 2024-01-01)
	tns="getVServerTrafficOfMonth"
	getopts_get_optional_argument ${@}
	get_ymd ${OPTARG}
	echo -e "Date:\t${date}" ;;
   h|?)	# Display help
	usage ;;
  esac
 done
 shift $((OPTIND-1))

return=$(curl -sN -H "Content-Type: text/xml; charset=utf-8" -H "SOAPAction:" -X POST "${url}"	\
	-d "<soapenv:Envelope									\
		xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"			\
		xmlns:tns=\"http://enduser.service.web.vcp.netcup.de/\">			\
		<soapenv:Body>									\
			<tns:${tns}>								\
			    <loginName>${cid}</loginName>					\
			     <password>${wspw}</password>					\
			  <vserverName>${server}</vserverName>					\
				 <year>${year}</year>						\
				<month>${month}</month>						\
				  <day>${day}</day>						\
			</tns:${tns}>								\
		</soapenv:Body>									\
	    </soapenv:Envelope>" | xmlstarlet sel -t -v '//return' -v '//faultstring')

[[ "${return}" =~ $'\n' ]] && nl="\n" || nl=""

echo -e "Server:\t${server}\nAction:\t${tns}\n->\t${nl}${return}\n"


###
# curl -sS "https://www.servercontrolpanel.de/WSEndUser?wsdl" | grep -iv 'response' | grep '<message name=' | sed -e 's/^<message name="//' -e 's/">$//'
#
# -a getVServers
# -n getVServerNickname
# -s getVServerState
# -i getVServerIPs
# -u getVServerUptime
# -z getVServerUpdateNotification
# -3 startVServer
# -4 stopVServer
# -5 vServerStart
# -6 vServerPoweroff
# -7 vServerACPIReboot
# -8 vServerACPIShutdown

# -9 vServerSuspend
# -b vServerResume
# -c vServerRestore
# -d vServerReset

# -e getVServerInformation   # nok
# -f getVServerLoad          # nok
# -g getVServerProcesses     # nok

# -j getVServerLogEntryCount
# -k getVServerLogEntries

# getLoginToken
# getPanelSettings
# getUserData

# getVServerStatToken
# getVServerTrafficOfDay
# getVServerTrafficOfMonth

# setVServerNickname
# sendPasswordResetRequest
# setPanelSettings

# addCloudVLANInterface
# changeIPRouting
# changeUserPassword
###

###
# get vserver stats
# tns="getVServerStatToken"
# https://www.servercontrolpanel.de/SCP/StatsViewer?type=TYPE&TimeRange=TIMERANGE&token=TOKEN
# TOKEN = getVServerStatToken
# TYPE = cpu, iops, pps, traffic
# TIMERANGE = 6, 24, 168, 744
###

###
# get vserver traffic
# tns="getVServerTrafficOfDay"
# tns="getVServerTrafficOfMonth"
#  year="2024"
# month="01"
#   day="01"
#  <year>${year}</year>		\
# <month>${month}</month>	\
#   <day>${day}</day>		\
###

###
# CURL_BODY='<soapenv:Envelope \
#  xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" \
#  xmlns:tns="http://enduser.service.web.vcp.netcup.de/"> \
#  <soapenv:Body> \
#   <tns:changeIPRouting> \
#    <loginName>LOGINNAME</loginName> \
#    <password>PASSWORD</password> \
#    <routedIP>FAILOVERIP</routedIP> \
#    <routedMask>32</routedMask> \
#    <destinationVserverName>DESTINATIONVSERVER</destinationVserverName> \
#    <destinationInterfaceMAC>DESTINATIONMAC</destinationInterfaceMAC> \
#   </tns:changeIPRouting> \
#  </soapenv:Body> \
# </soapenv:Envelope>'

# CURL_OUTPUT=$(curl -sN \
#  -H "Content-Type: text/xml; charset=utf-8" -H "SOAPAction:" -X POST "https://www.servercontrolpanel.de/WSEndUser?xsd=1" \
#  -d "${CURL_BODY}")

# printf "Subject: DESTINATIONVSERVER now master\n\nBody:\n${CURL_BODY}\n\nResponse:\n${CURL_OUTPUT}" | ssmtp man@email.com
###

###
# <?xml version="1.0" encoding="UTF-8"?>
# <SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://enduser.service.web.vcp.netcup.de/">
# 	<SOAP-ENV:Body>
# 		<ns1:changeIPRouting>
# 			<loginName>11111</loginName>
# 			<password>123456789</password>
# 			<routedIP>1.2.3.4</routedIP>
# 			<routedMask>32</routedMask>
# 			<destinationVserverName>v1234567890</destinationVserverName>
# 			<destinationInterfaceMAC>11:22:33:44:55:66</destinationInterfaceMAC>
# 		</ns1:changeIPRouting>
# 	</SOAP-ENV:Body>
# </SOAP-ENV:Envelope>
#
# ###
#
# #!/usr/bin/env bash
# # set -eux
# set -eu
#
# file="${1}"
#
# # Netcup URLs
# # https://www.netcup-wiki.de/wiki/Netcup_SCP_Webservice
# domain="www.servercontrolpanel.de"
#   wsdl="https://www.servercontrolpanel.de/WSEndUser?wsdl"
#    api="https://www.servercontrolpanel.de/WSEndUser"
#
# curl -sfSL -w '%{http_code}' -H 'Content-Type: text/xml; charset=utf-8' -H 'SOAPAction:' -d @"${file}" -X POST "${api}"
###
